#!/bin/bash
set -eu

url2version() {
  VERSION=$(echo $1 | grep -Po '/(builds|\d+\.\d+\.\d+)/')
  echo ${VERSION:1:-1}
}

install() {
  URL=$1
  INSTALL_PATH=$ZIGENV_ROOT/versions/$(url2version $URL)
  mkdir -p $INSTALL_PATH
  pushd $INSTALL_PATH
  wget $URL
  TAR_FILE=$(ls)
  tar xvf $TAR_FILE && rm $TAR_FILE
  ZIG_DIR=$(ls)
  mv $ZIG_DIR/* .
  rm -rf $ZIG_DIR
}

if [ $# -eq 0 ]; then
  echo "Usage: zigenv install <version>"
  echo "Available zig versions:"
  for url in $URLS; do
    echo "   $(url2version $url)"
  done
  exit 1
fi

# assume that the architecture is passed as second argument
if [ -z ${2+x} ]; then
	ARCH="x86_64-linux"
else
	ARCH=$2
fi
echo "Fetching versions for '${ARCH}' architecture"
URLS=$(curl -Lso- https://ziglang.org/download/index.json | jq --arg jq_arch ${ARCH} -r '.[] | .[$jq_arch] | .tarball')

for url in $URLS; do
  if [[ $url == */$1/* ]]; then
    echo "Version $1 found. $url"
    echo "Install this version? [Y/n]"
    read YN
    case $(echo $YN | tr y Y) in
      "" | Y*)
        echo "Installing..."

        for version in $(ls $ZIGENV_ROOT/versions); do
          if [ $version = $1 ]; then
            echo "Version $version is already installed."
            echo "Reinstall? [Y/n]"
            read YN
            case $(echo $YN | tr y Y) in
              "" | Y*)
                rm -rf $ZIGENV_ROOT/versions/$version
                ;;
              *)
                exit 0
                ;;
            esac
          fi
        done

        install $url
        ;;
      *)
        ;;
    esac
  fi
done
